// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id  @default(uuid())
  username        String
  profilePicture  String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Model {
  id             String   @id  @default(uuid())
  name           String
  type           ModelTypeEnum
  age            Int
  ethnicity      EthnicityEnum
  eyeColor       EyeColorEnum
  bald           Boolean
  userId         String
  triggerWord    String?
  tensorPath     String?
  thumbnail      String?
  trainingStatus ModelTrainingStatusEnum   @default(Pending)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  falAiRequestId String?
  zipUrl         String
  outputImages   OutputImages[]
  open           Boolean    @default(false)
  @@index([falAiRequestId])

}



model OutputImages {
  id              String   @id  @default(uuid())
  imageUrl        String?  
  modelId         String
  userId          String
  prompt          String
  status          OutputImageStatusEnum  @default(Pending)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  falAiRequestId  String?   @unique
  model           Model    @relation(fields: [modelId], references: [id])
  @@index([falAiRequestId])
}

model Packs {
  id          String   @id  @default(uuid())
  name        String
  description String   @default("")
  imageUrl1   String   @default("")
  imageUrl2   String   @default("")
  prompts     PackPrompts[]
}

model PackPrompts {
  id        String   @id  @default(uuid())
  prompt    String
  packId    String  
  pack      Packs   @relation(fields: [packId], references: [id])
}

enum ModelTypeEnum {
  Man
  Woman
  Others
}

enum EthnicityEnum {
  White
  Black
  Asian_American
  East_Asian
  South_East_Asian
  South_Asian
  Middle_Eastern
  Pacific
  Hispanic
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}

enum OutputImageStatusEnum {
  Pending
  Generated
  Failed
}

enum ModelTrainingStatusEnum {
  Pending
  Generated
  Failed
}